[project]
name = "crew-assistant"
version = "0.3.0"
description = "Modular AI orchestration platform with enhanced agent workflows"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Crew Assistant Team", email = "nocturnaltungsten@protonmail.com"},
]
keywords = ["ai", "agents", "multi-agent", "local-llm", "automation", "workflows"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "requests>=2.32.4",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "loguru>=0.7.0",
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "ruff>=0.12.0",
    "types-requests>=2.32.4.20250611",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.27.0",  # For async HTTP testing
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "I",   # isort
    "S",   # bandit security
    "T20", # flake8-print
]
ignore = [
    "E501",  # line too long (handled by line-length)
    "S101",  # use of assert
    "T201",  # print statements (ok in CLI apps)
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "T201"]  # Allow assert and print in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=crew_assistant --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests", 
    "system: marks tests as system/e2e tests",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["crew_assistant", "agents", "core", "utils"]
omit = [
    "tests/*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
